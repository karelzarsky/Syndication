@model ArticleDetail
@{
    ViewData["Title"] = Model.ArticleEntity.Title;
}
<div class="container-fluid">
    <div class="well well-sm">
        <h1 class="text-center"><strong>@Model.ArticleEntity.Title</strong></h1>
    </div>
    <div class="well well-lg">
        <div class="row">
            <div class="col-xs-6 col-lg-2 text-warning text-right">ID:</div>
            <div class="col-xs-6 col-lg-2">@Model.ArticleEntity.ID</div>
            <div class="col-xs-6 col-lg-1 text-warning text-right">Language:</div>
            <div class="col-xs-6 col-lg-2"><strong>@Model.ArticleEntity.language</strong></div>
            <div class="col-xs-6 col-lg-2 text-warning text-right">Published:</div>
            <div class="col-xs-6 col-lg-3">@Model.ArticleEntity.PublishedUTC.ToLocalTime().ToString("dd.MM.yy HH:mm")</div>
        </div>
        <div class="row">
            <div class="col-xs-6 col-lg-2 text-warning text-right">Received:</div>
            <div class="col-xs-6 col-lg-2">@Model.ArticleEntity.ReceivedUTC.ToLocalTime().ToString("dd.MM.yy HH:mm")</div>
            <div class="col-xs-6 col-lg-1 text-warning text-right">Ticker:</div>
            <a class="col-xs-6 col-lg-2" asp-controller="Home" asp-action="Company" asp-route-ticker="@Model.ArticleEntity.Ticker"><strong>@Model.ArticleEntity.Ticker</strong></a>
            <div class="col-xs-6 col-lg-2 text-warning text-right">Score MM, AVG:</div>
            <div class="col-xs-6 col-lg-3">@((Model.ArticleEntity.ScoreMin + Model.ArticleEntity.ScoreMax) * 100).ToString("N3"), @Model.ScoredPhrases.Select(x => x.Score).Average().ToString("N3")</div>
        </div>
        <div class="col-xs-6 col-lg-2 text-warning text-right">URL:</div>
        <a href="@Model.ArticleEntity.URI_links">@Model.ArticleEntity.URI_links</a>
    </div>
    <div class="well">
        <strong>@Model.ArticleEntity.Text()</strong>
    </div>
    <div class="well" style="background-color: #000000">
        <strong>
            @foreach (var segment in Model.Colored)
            {
                <font color="@segment.Color">@segment.Text</font>
            }
        </strong>
    </div>
    <div class="well">
        @foreach (var ph in Model.ScoredPhrases.Distinct())
        {
            @ph.Score.ToString("N3") @ph.Phrase<br />
        }
    </div>
</div>
